#
#<1> LAMMPS input variables
variable  dir_4_ftmp  string "operation_center.tmp_files"
variable  dir_addinfo string "operation_center.add_info"
variable  dir_delinfo string "operation_center.del_info"

variable  dp_file_name string "frozen_model.pb" 
variable  data_filename string "small_band.data"

variable  outfilename string "ann.lammpstrj"
variable  mainloop_time  equal 20
variable  run_time_at_each_loop equal 4000
variable  dump_freq equal 100
#<1.end>


#<2> LAMMPS 字头
units           metal
boundary        p p p

atom_style      atomic

read_data      ${data_filename}
mass 1 107.868200 # Ag
mass 2 26.981539 # Al
mass 3 1 # As
mass 4 196.96654 # Au
mass 5 10.811 # B
mass 6 208.98038 # Bi
mass 7 12.0100 # C
mass 8 40.078 # Ca
mass 9 112.4 # Cd
mass 10 35.4532000 # Cl
mass 11 58.93300 # Co
mass 12 51.996 # Cr
mass 13 1 # Cs
mass 14 63.546000 # Cu
mass 15 55.845000 # Fe
mass 16 1 # Ga
mass 17 1 # Ge
mass 18 1.00794 # H
mass 19 1 # Hf
mass 20 1 # Hg
mass 21 1 # In
mass 22 192.2170000 # Ir
mass 23 39.0983 # K
mass 24 24.3050 # Mg
mass 25 54.938 # Mn
mass 26 95.9400 # Mo
mass 27 14.0067 # N
mass 28 22.989770 # Na
mass 29 92.90638 # Nb
mass 30 58.690000 # Ni
mass 31 15.9994 # O
mass 32 1 # Os
mass 33 30.973762 # P
mass 34 1 # Pb
mass 35 106.420000 # Pd
mass 36 195.07800 # Pt
mass 37 1 # Rb
mass 38 186.207 # Re
mass 39 102.90550 # Rh
mass 40 101.0700 # Ru
mass 41 32.06500 # S
mass 42 121.76 # Sb
mass 43 1 # Sc
mass 44 78.9600 # Se
mass 45 1 # Si
mass 46 118.71 # Sn
mass 47 1 # Sr
mass 48 1 # Ta
mass 49 1 # Tc
mass 50 1 # Te
mass 51 47.867 # Ti
mass 52 1 # Tl
mass 53 50.9414 # V
mass 54 183.8400 # W
mass 55 88.905 # Y
mass 56 65.409 # Zn
mass 57 1 # Zr


pair_style      deepmd ${dp_file_name}
pair_coeff      * *
neighbor        2.0 bin
neigh_modify    every 10 delay 0 check no

velocity        all create 300.0 4928459 rot yes dist gaussian
fix             1 all nvt temp 300.0 300.0 0.1

thermo          10
dump            1 all custom ${dump_freq} ${outfilename} id type x y z
compute         ae0 all pe/atom
dump            2 all custom ${dump_freq} ae.${outfilename} id type c_ae0

timestep        0.001  # 0.001 means 1fs
run             0
#<2.end>
#<3>
#<3.loop(main)> 主程序
label       loopa
variable    a loop ${mainloop_time}
  print  "#3.main.loop> time ${a}"
  print  "writing restart.equil"

  write_restart restart.equil

  #<3.1> 判断要增删哪些原子
  print    "  #3.1> judge which atoms to be add or del"  #${a} 是要增加的原子de loop数
  print    ""  
  print    "  #3.1> ./scripts/adddel_conditions_2_adddel_files.py ${outfilename} "
    #<3.1.atom_transform> run ./scripts/atom_transform.sh ${outfilename}
    shell    ./scripts/adddel_conditions_2_adddel_files.py
    #shell   ./scripts/atom_transform.sh ${outfilename}  #atom_transform will create natm_to_add.txt and natm_to_del.txt
  print    ""
  print    "  #3.1.end>"
  #<3.1.end>


  #<3.2> 增加原子的操作  
  print    "  #3.2> add atoms"
  print    ""
  print    "  #3.2> read natm_to_add from ${dir_addinfo}/natm_to_add.txt"
  variable  natm_to_add file ./${dir_addinfo}/natm_to_add.txt 
  print "  #3.2> : we will add ${natm_to_add} atoms into the system"

    #<3.2.if> 判断是否要增加原子
    if "${natm_to_add} > 0" then "jump SELF 3.2.if.cond_1" else "jump SELF 3.2.if.cond_else"

      #<3.2.if.cond1> 如果需要增加原子,则增加原子
      label 3.2.if.cond_1

        print  ""
        print  "      #3.2.if.cond1> : add these atoms"
        print  ""

        #<3.2.if.cond1.loop> 增加原子loop
        #以下执行增加原子的操作.将所需增加的原子及其坐标放在${dir_addinfo}/eleidx_to_add_${index}.txt ${dir_addinfo}/[x,y,z]_to_add_${index}.txt 
        #以下通过loop增加原子

        ##
        #variable   natm equal 
        ##

        label    loop_4_adatom
          variable  index loop ${natm_to_add}
 
          variable  ele_idx file ${dir_addinfo}/eleidx_to_add_${index}.txt

          variable  x_cor_add file ${dir_addinfo}/x_to_add_${index}.txt
          variable  y_cor_add file ${dir_addinfo}/y_to_add_${index}.txt
          variable  z_cor_add file ${dir_addinfo}/z_to_add_${index}.txt

          create_atoms  ${ele_idx}  single ${x_cor_add} ${y_cor_add} ${z_cor_add}

          ##<extension.velocity_set>
          #variable addatom_id equal count(all)
          #group id_new id ${addatom_id} 
          
          #variable vx equal 200*(59.5116-${x_cor_add})
          #variable vy equal 200*(63.7752-${y_cor_add})
          #variable vz equal 200*(60.1321-${z_cor_add})
          #velocity id_new set ${vx} ${vy} ${vz}

          #if "${index} == 1" then "group newly_add_atom id ${addatom_id}" else "group newly_add_atom union newly_add_atom id_new"

          #group id_new delete
          #variable vx delete
          #variable vy delete
          #variable vz delete
          ##<extension.velocity_set.end>

          print ""
          print "        #3.2.if.cond1.loop> : add the ${index}th atom"
          print "        #3.2.if.cond1.loop>: ele_idx: ${ele_idx}     cordinates: ${x_cor_add} ${y_cor_add} ${z_cor_add}"  
          print ""
 
          variable  ele_idx delete

          variable  x_cor_add delete
          variable  y_cor_add delete
          variable  z_cor_add delete

          next    index
        jump SELF loop_4_adatom
        #<3.2.if.cond1.loop.end>

      jump SELF 3.2.if.end
      #<3.2.if.cond1.end>

      #<3.2.if.cond_else>
      label 3.2.if.cond_else

        #若不增加原子,则跳过
        print  ""
        print  "      #3.2.if.cond_else> : notice the atom adding number is 0, jump the adding progress"

      label 3.2.if.end
      #<3.2.if.cond_else.end>
    #<3.2.if.end>
  
    #<3.2.relax>
    print    ""  
    print    "    #3.2.relax> : doing structrual optimization :  minimize 1.0e-6 1.0e-8 100 10000"
    print    ""

    run 0
    minimize 1.0e-6 1.0e-8 100 10000
    print    "    #3.2.relax.end>"
    #<3.2.relax.end>

    #<3.2.delete_variables>
    variable natm_to_add delete
    #<3.2.delete_variables.end>
  print "  3.2.end>"
  #<3.2.end>
  

  #<3.3> 减少原子的操作

  print    "  #3.3> operation of del----------------------"
  print    ""
  print    "  #3.3> read natm_to_del from ${dir_delinfo}/natm_to_del.txt"
    #<3.3.read_variable_natm_to_del> 从${dir_delinfo}/natm_to_del.txt中读取删除原子信息
    variable  natm_to_del file ${dir_delinfo}/natm_to_del.txt
    print "    #3.3.read_variable_natm_to_del> we will del ${natm_to_del} atoms into the system"
    #<3.3.read_variable_natm_to_del.end>

    #<3.3.if>
    if "${natm_to_del} > 0" then "jump SELF 3.3.if.cond_1" else "jump SELF 3.3.if.cond_else"
     
      #<3.3.if.cond_1>
      label 3.3.if.cond_1

        #<3.3.if.cond_1.loop> 执行删除原子的操作,将需要删除原子的原子序号给在这里
        print  "        #3.3.if.cond_1.loop> : deleltion loop"
        label    loop_4_deatom
        variable  index loop ${natm_to_del}


          variable  del_id file ${dir_delinfo}/index_to_del_${index}.txt
          if     "${index} == 1" then &
             "group  del_group id  ${del_id}"

          group    del_id_${index} id ${del_id}
          group    del_group  union  del_group del_id_${index}
          group    del_id_${index}  delete

          print ""
          print "[3.operation of del] : delete the ${index}th atom"
          print "[3.operation of del] : delete the atom id of ${del_id}"
          print ""

          variable  del_id  delete    

        next    index
        jump SELF loop_4_deatom
        #<3.3.if.cond_1.loop.end> 

      delete_atoms group del_group compress yes 
    
     
      jump SELF 3.3.if.end
      #<3.3.if.cond_1.end>        

      #<3.3.if.cond_else>
      label 3.3.if.cond_else

      #若不del原子,则跳过
      print  ""
      print  "[3.operation of del] : notice the atom del number is 0, jump the del progress"
    
    label 3.3.if.end
    #<3.3.if.end>  

    #<3.3.delete_variables>
      variable natm_to_del delete 
    #<3.3.delete_variables.end>  

  print    ""
  print    "  #3.3.end>"
  print    ""
  #<3.3.end>  

  #<3.4> run
#    region region_to_del_Na block 131 181 120 215 80 140 side out
#   group outside_Na region region_to_del_Na
#    delete_atoms group outside_Na compress yes    

#  region region_to_del_Na delete
#  group outside_Na delete

  ##<mod>
  region          material_region block INF INF INF INF 5 34  

  group           material type 7 
  group           doper subtract all material

  velocity        doper create 2000.0 4928459 rot yes dist gaussian
  fix             2 doper nvt temp 2000.0 1000.0 0.1

  velocity        material create 300.0 4928459 rot yes dist gaussian
  fix             1 material nvt temp 300.0 300.0 0.1

  #velocity        doper_in_region create 300.0 4928459 rot yes dist gaussian
  #fix             3 doper_in_region nvt temp 300.0 300.0 0.1

  run             ${run_time_at_each_loop}

  
  #delete_atoms group doper_not_in_region compress yes

  unfix           1
  unfix           2
  #if              "${a}>1" then &
  #                "unfix           3"

  group           material delete
  group           doper delete
  #group           atoms_in_region delete
  #group           doper_in_region delete
  #group           doper_not_in_region delete

  region          material_region delete

  ##<mod> 

  compute         $a all temp
  #<3.4.end>

next        a
jump SELF loopa
#<3.loop(main).end>
#<3.end>
